framework:
    messenger:
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed

        transports:
            async.priority:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    vhost: /mail
                    exchange:
                        name: priority
#                        type: !php/const AMQP_EX_TYPE_DIRECT
#                        flags: !php/const AMQP_DURABLE
                    queues:
                        priority:
#                            flags: !php/const AMQP_DURABLE
#                            arguments:
#                                x-max-priority: 100
#                            binding_keys:
#                                - 'async_priority'
#            async_priority:
#                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
#                options:
#                    queue:
#                        name: priority

            async.regular:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    vhost: /mail
                    exchange:
                        name: regular
#                        type: !php/const AMQP_EX_TYPE_DIRECT
#                        flags: !php/const AMQP_DURABLE
                    queues:
                        regular:
#                            flags: !php/const AMQP_DURABLE
#                            arguments:
#                                x-max-priority: 100
#                            binding_keys:
#                                - 'async_regular'

            async.broadcast:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    vhost: /mail
                    exchange:
                        name: broadcast
#                        type: !php/const AMQP_EX_TYPE_DIRECT
#                        flags: !php/const AMQP_DURABLE
                    queues:
                        broadcast: ~
#                            flags: !php/const AMQP_DURABLE
#                            arguments:
#                                x-max-priority: 100
#                            binding_keys:
#                                - 'async_broadcast'

            async.results:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    vhost: /mail
                    exchange:
                        name: results
#                        type: !php/const AMQP_EX_TYPE_DIRECT
#                        flags: !php/const AMQP_DURABLE
                    queues:
                        result: ~
#                            flags: !php/const AMQP_DURABLE
#                            arguments:
#                                x-max-priority: 100
#                            binding_keys:
#                                - 'async_result'

            # https://symfony.com/doc/current/messenger.html#transport-configuration
            # async: '%env(MESSENGER_TRANSPORT_DSN)%'
            # failed: 'doctrine://default?queue_name=failed'
            # sync: 'sync://'

        routing:
            'App\Message\Message': [ async.priority, async.regular ]
            'App\Message\BroadcastMessage': [ async.broadcast ]
            'App\Message\ResultMessage': [ async.results ]
            # Route your messages to the transports
            # 'App\Message\YourMessage': async

# when@test:
#    framework:
#        messenger:
#            transports:
#                # replace with your transport name here (e.g., my_transport: 'in-memory://')
#                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
#                async: 'in-memory://'
